# Default values for s3wwww.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# MinIO configuration
# These values are used to configure the connection to MinIO
minio:
  # The MinIO endpoint URL (required)
  endpoint: "http://minio.tenant-ns.svc.cluster.local"
  # MinIO access key (required)
  accessKey: "minio"
  # MinIO secret key (required)
  secretKey: "minio123"
  # The bucket name to serve content from (required)
  bucketName: "up42-bucket"

# Application configuration
# These values control the application behavior
app:
  # The address and port to listen on (format: "host:port")
  address: "0.0.0.0:8080"
# Number of replicas to run
replicas: 1

# Service configuration
# These values control the Kubernetes service
service:
  # Service type (ClusterIP, NodePort, or LoadBalancer)
  type: ClusterIP
  # Service port
  port: 8080
  # Target port (must match app.address port)
  targetPort: 8080

# ConfigMap configuration
# These values define the static content served by default
configMap:
  enabled: true
  name: s3www-default-content
  data:
    index.html: |
      <!DOCTYPE html>
      <html lang="en">
      <head>
        <meta charset="UTF-8">
        <title>Embedded Giphy GIF</title>
      </head>
      <body>
        <h1>Enjoy this GIF!</h1>
        <iframe src="https://giphy.com/embed/VdiQKDAguhDSi37gn1" width="480" height="270" frameBorder="0" allowFullScreen></iframe>
        <p><a href="https://giphy.com/gifs/VdiQKDAguhDSi37gn1">View on Giphy</a></p>
      </body>
      </html>

# Pod configuration
# These values control pod-specific settings
pod:
  # Annotations to add to the pod
  annotations: {}
  # Labels to add to the pod
  labels: {}
  # Node selector labels
  nodeSelector: {}
  # Tolerations for pod scheduling
  tolerations: []
  # Affinity rules for pod scheduling
  affinity: {}

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: y4m4/s3www
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.9.0"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 64Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
